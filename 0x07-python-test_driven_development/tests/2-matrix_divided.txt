>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Test
	>>> matrix1 = [[2, 6, 2], [8, 9, 4]]
	>>> matrix_divided(matrix1, 2)
	[[1.0, 3.0, 1.0], [4.0, 4.5, 2.0]]

	>>> matrix_divided(matrix1, 0)
	Traceback (most recent call last):
		...
	ZeroDivisionError: division by zero

	>>> matrix2 = [[2, 6, 8], [7, 8, 24, 8.0]]

	>>> matrix_divided(matrix2, 2)
	Traceback (most recent call last):
		...
	TypeError: Each row of the matrix must have the same size

	>>> matrix_divided(matrix1, 'h')
	Traceback (most recent call last):
		...
	TypeError: div must be a number

	>>> matrix3 = [[7, 'k', 8], [89, 34, 23]]

	>>> matrix_divided(matrix3, 3)
	Traceback (most recent call last):
		...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix_divided(matrix1, -2)
	[[-1.0, -3.0, -1.0], [-4.0, -4.5, -2.0]]

	>>> matrix_divided(matrix1)
	Traceback (most recent call last):
		...
	TypeError: matrix_divided() missing 1 required positional argument: 'div'

	>>> matrix_negative = [[-34, -12, 78]]

	>>> matrix_divided(matrix_negative, -23)
	[[1.48, 0.52, -3.39]]

	>>> matrix_divided([[56e12323, 7, 9]], 23)
	[[inf, 0.3, 0.39]]

	>>> matrix_divided([[6, 8, -7]], 56e3737)
	[[0.0, 0.0, -0.0]]
